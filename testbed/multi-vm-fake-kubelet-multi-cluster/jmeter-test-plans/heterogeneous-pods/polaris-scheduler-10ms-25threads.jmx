<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="polaris-scheduler-load-test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Main" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">25</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">180</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">38080</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/pods</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Pod 4CPU 4Gi" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;apiVersion&quot;: &quot;v1&quot;,&#xd;
    &quot;kind&quot;: &quot;Pod&quot;,&#xd;
    &quot;metadata&quot;: {&#xd;
        &quot;namespace&quot;: &quot;test&quot;,&#xd;
        &quot;name&quot;: &quot;${__UUID}&quot;,&#xd;
        &quot;labels&quot;: {&#xd;
            &quot;name&quot;: &quot;myapp-01&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;spec&quot;: {&#xd;
        &quot;containers&quot;: [&#xd;
            {&#xd;
                &quot;name&quot;: &quot;myapp&quot;,&#xd;
                &quot;image&quot;: &quot;gcr.io/google-containers/pause:3.2&quot;,&#xd;
                &quot;resources&quot;: {&#xd;
                    &quot;limits&quot;: {&#xd;
                        &quot;polaris-slo-cloud.github.io/fake-cpu&quot;: &quot;4000m&quot;,&#xd;
                        &quot;polaris-slo-cloud.github.io/fake-memory&quot;: &quot;4Gi&quot;&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;tolerations&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;fake-kubelet/provider&quot;,&#xd;
                &quot;operator&quot;: &quot;Exists&quot;,&#xd;
                &quot;effect&quot;: &quot;NoSchedule&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Pod 2CPU 2Gi A" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;apiVersion&quot;: &quot;v1&quot;,&#xd;
    &quot;kind&quot;: &quot;Pod&quot;,&#xd;
    &quot;metadata&quot;: {&#xd;
        &quot;namespace&quot;: &quot;test&quot;,&#xd;
        &quot;name&quot;: &quot;${__UUID}&quot;,&#xd;
        &quot;labels&quot;: {&#xd;
            &quot;name&quot;: &quot;myapp-01&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;spec&quot;: {&#xd;
        &quot;containers&quot;: [&#xd;
            {&#xd;
                &quot;name&quot;: &quot;myapp&quot;,&#xd;
                &quot;image&quot;: &quot;gcr.io/google-containers/pause:3.2&quot;,&#xd;
                &quot;resources&quot;: {&#xd;
                    &quot;limits&quot;: {&#xd;
                        &quot;polaris-slo-cloud.github.io/fake-cpu&quot;: &quot;2000m&quot;,&#xd;
                        &quot;polaris-slo-cloud.github.io/fake-memory&quot;: &quot;2Gi&quot;&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;tolerations&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;fake-kubelet/provider&quot;,&#xd;
                &quot;operator&quot;: &quot;Exists&quot;,&#xd;
                &quot;effect&quot;: &quot;NoSchedule&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Pod 2CPU 2Gi B" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;apiVersion&quot;: &quot;v1&quot;,&#xd;
    &quot;kind&quot;: &quot;Pod&quot;,&#xd;
    &quot;metadata&quot;: {&#xd;
        &quot;namespace&quot;: &quot;test&quot;,&#xd;
        &quot;name&quot;: &quot;${__UUID}&quot;,&#xd;
        &quot;labels&quot;: {&#xd;
            &quot;name&quot;: &quot;myapp-01&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;spec&quot;: {&#xd;
        &quot;containers&quot;: [&#xd;
            {&#xd;
                &quot;name&quot;: &quot;myapp&quot;,&#xd;
                &quot;image&quot;: &quot;gcr.io/google-containers/pause:3.2&quot;,&#xd;
                &quot;resources&quot;: {&#xd;
                    &quot;limits&quot;: {&#xd;
                        &quot;polaris-slo-cloud.github.io/fake-cpu&quot;: &quot;2000m&quot;,&#xd;
                        &quot;polaris-slo-cloud.github.io/fake-memory&quot;: &quot;2Gi&quot;&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;tolerations&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;fake-kubelet/provider&quot;,&#xd;
                &quot;operator&quot;: &quot;Exists&quot;,&#xd;
                &quot;effect&quot;: &quot;NoSchedule&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Pod 1CPU 1Gi 70% battery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;apiVersion&quot;: &quot;v1&quot;,&#xd;
    &quot;kind&quot;: &quot;Pod&quot;,&#xd;
    &quot;metadata&quot;: {&#xd;
        &quot;namespace&quot;: &quot;test&quot;,&#xd;
        &quot;name&quot;: &quot;${__UUID}&quot;,&#xd;
        &quot;labels&quot;: {&#xd;
            &quot;name&quot;: &quot;myapp-01&quot;,&#xd;
            &quot;polaris-slo-cloud.github.io/battery.min-level&quot;: &quot;70&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;spec&quot;: {&#xd;
        &quot;containers&quot;: [&#xd;
            {&#xd;
                &quot;name&quot;: &quot;myapp&quot;,&#xd;
                &quot;image&quot;: &quot;gcr.io/google-containers/pause:3.2&quot;,&#xd;
                &quot;resources&quot;: {&#xd;
                    &quot;limits&quot;: {&#xd;
                        &quot;polaris-slo-cloud.github.io/fake-cpu&quot;: &quot;1000m&quot;,&#xd;
                        &quot;polaris-slo-cloud.github.io/fake-memory&quot;: &quot;1Gi&quot;&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        ],&#xd;
        &quot;tolerations&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;fake-kubelet/provider&quot;,&#xd;
                &quot;operator&quot;: &quot;Exists&quot;,&#xd;
                &quot;effect&quot;: &quot;NoSchedule&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">10</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
