# Configuration for the polaris-scheduler

# The name of this scheduler (used to direct pods to this scheduler).
schedulerName: polaris-scheduler

# The number of nodes to sample defined as basis points (bp) of the total number of nodes.
# 1 bp = 0.01%
#
# Min: 0
# Max: 10000
# Default: 200 (= 2%)
nodesToSampleBp: 1200

# The number of node samplers to run in parallel.
# Default: 0 (number of CPU cores * 10)
parallelNodeSamplers: 0

# The number of Scheduling Decision Pipelines to run in parallel.
# Default: 0 (number of CPU cores * 10)
parallelDecisionPipelines: 0

# The size of the buffer used for incoming pods.
# Default: 1000
incomingPodsBufferSize: 1000

# The number of candidate nodes that will be picked at the end of the scoring phase.
# The scheduler will try to commit the scheduling decision to the highest scored node.
# If this fails, it will proceed to the node with the second highest score.
# Only after the commit for all these nodes has failed, the pod will be considered as having a scheduling conflict.
#
# Default: 3
commitCandidateNodes: 3

# Defines the mode ("singleCluster" or "multiCluster") in which to operate the scheduler.
#
#   - In "singleCluster" mode, the scheduler connects directly interacts with cluster's orchestrator to
#     get incoming pods and to assign them to nodes.
#   - In "multiCluster" mode, the scheduler can handle multiple clusters (possibly operated by multiple orchestrators)
#     In this mode polaris-scheduler accepts pods through an external API and submits scheduling decisions to the polaris-scheduler-agent
#     running in each cluster.
#
# Default: "multiCluster"
operatingMode: multiCluster

# The list of addresses and ports that the submit pod API should listen on in
# the format "<IP>:<PORT>"
# This setting applies only if "operatingMode" is set to "multiCluster".
#
# Default: [ "0.0.0.0:8080" ]
submitPodListenOn:
  - "0.0.0.0:8080"

# The map of remote clusters - only needed if "operatingMode" is "multiCluster".
#
# The key of each item has to be the cluster name.
# Example:
# remoteClusters:
#   clusterA:
#     baseUri: "http://sampler.cluster-a:8081/v1"
#   clusterB":
#     baseUri: "https://sampler.cluster-b:8888/v1"
remoteClusters:
  kind-01-edge-vienna:
    baseUri: "http://polaris-scheduler-cluster-node-01.europe-west1-b:30033/"
  kind-02-cloud-vienna:
    baseUri: "http://polaris-scheduler-cluster-node-02.europe-west1-b:30033/"
  kind-03-edge-salzburg:
    baseUri: "http://polaris-scheduler-cluster-node-03.europe-west4-a:30033/"
  kind-04-edge-rome:
    baseUri: "http://polaris-scheduler-cluster-node-04.europe-west3-c:30033/"
  kind-05-edge-new-york:
    baseUri: "http://polaris-scheduler-cluster-node-05.northamerica-northeast1-a:30033/"
  kind-06-edge-san-francisco:
    baseUri: "http://polaris-scheduler-cluster-node-06.us-west1-b:30033/"
  kind-07-edge-frankfurt:
    baseUri: "http://polaris-scheduler-cluster-node-07.europe-north1-a:30033/"
  kind-08-cloud-san-francisco:
    baseUri: "http://polaris-scheduler-cluster-node-08.us-west1-b:30033/"
  kind-09-cloud-frankfurt:
    baseUri: "http://polaris-scheduler-cluster-node-09.europe-north1-a:30033/"
  kind-10-edge-dallas:
    baseUri: "http://polaris-scheduler-cluster-node-10.us-central1-a:30033/"

# The list of plugins for the scheduling pipeline.
plugins:
  # The Sort stage must be configured with a single plugin.
  sort:
    name: PrioritySort

  # The SampleNodes stage must be configured with a single plugin.
  sampleNodes:
    name: RemoteNodesSampler

  # preFilter:
  #   - name: ResourcesFit

  # filter:
  #   - name: ResourcesFit

  # # preScore:
  # #   - name: Plugin1
  # #   - name: Plugin2

  # score:
  #   - name: ResourcesFit
  #     weight: 1

  # reserve:
  #   - name: Plugin1
  #   - name: Plugin2


# (optional) Allows specifying configuration parameters for each plugin.
pluginsConfig:
  - name: ResourcesFit
    config:
      scoringMode: LeastAllocated

  - name: RemoteNodesSampler
    config:
      samplingStrategy: random
      # These requests apply to each instance of the RemoteNodesSampler plugin (see parallelNodeSamplers).
      maxConcurrentRequestsPerInstance: 50
      # Specifies how many clusters should be sampled for a pod (percentage value from 1-100).
      percentageOfClustersToSample: 100

  - name: Plugin1
    config:
      keyA: valueA
      nestedObj:
        keyB: valueB
        keyC: 1
